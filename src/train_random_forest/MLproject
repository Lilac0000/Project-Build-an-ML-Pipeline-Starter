name: train_random_forest
conda_env: conda.yml
entry_points:
  main:
    parameters:
      trainval_artifact:
        description: Artifact containing the training dataset. It will be split into train and validation
        type: str
      val_size:
        description: Size of the validation split. Fraction of the dataset, or number of items
        type: float
      random_seed:
        description: Seed for random number generator
        type: int
        default: 42
      stratify_by:
        description: Column to use for stratification
        type: str
        default: 'none'
      n_estimators:
        description: Number of trees in the random forest
        type: int
        default: 100
      max_depth:
        description: Maximum depth of the trees
        type: int
        default: 10
      min_samples_split:
        description: Minimum samples required to split an internal node
        type: int
        default: 4
      min_samples_leaf:
        description: Minimum samples required to be at a leaf node
        type: int
        default: 3
      max_tfidf_features:
        description: Maximum number of words to be used in the TFIDF vectorizer
        type: int
        default: 10
      output_artifact:
        description: Name for the output serialized model
        type: str
      target:
        description: Target column name for prediction
        type: str
        default: 'price'
    command: |
      python run.py --input_artifact {trainval_artifact} \
                    --val_size {val_size} \
                    --random_seed {random_seed} \
                    --stratify_by {stratify_by} \
                    --n_estimators {n_estimators} \
                    --max_depth {max_depth} \
                    --min_samples_split {min_samples_split} \
                    --min_samples_leaf {min_samples_leaf} \
                    --max_tfidf_features {max_tfidf_features} \
                    --output_artifact {output_artifact} \
                    --target {target}
